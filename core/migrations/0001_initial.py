# Generated by Django 2.2.13 on 2022-04-20 09:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='categoty name')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='ingredient name')),
                ('image', models.ImageField(blank=True, upload_to='images', verbose_name='image')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('energy', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True, verbose_name='energy')),
                ('protein', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True, verbose_name='protein')),
                ('fat', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True, verbose_name='fat')),
                ('carbohydrate', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True, verbose_name='carbohydrate')),
            ],
            options={
                'verbose_name': 'ingredient',
                'verbose_name_plural': 'ingredients',
            },
        ),
        migrations.CreateModel(
            name='Nutrient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='tag name')),
            ],
            options={
                'verbose_name': 'nutrient',
                'verbose_name_plural': 'nutrients',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, unique=True, verbose_name='title')),
                ('url', models.CharField(blank=True, default='', max_length=250, unique=True, verbose_name='recipe url')),
                ('status', models.CharField(choices=[('P', 'published'), ('d', 'draft'), ('i', 'idea')], default='i', max_length=2, verbose_name='status')),
                ('complexity', models.IntegerField(choices=[(1, 'Ðµasy'), (2, 'medium'), (3, 'hard')], default=1, verbose_name='complexity')),
                ('time', models.IntegerField(blank=True, default=0, help_text='Total time for cooking, in minutes', null=True, verbose_name='time')),
                ('manually_weight', models.IntegerField(blank=True, default=None, help_text='Weight after cooking, in grams', null=True, verbose_name='weight')),
                ('manually_energy', models.DecimalField(blank=True, decimal_places=3, default=None, max_digits=7, null=True, verbose_name='energy')),
                ('manually_protein', models.DecimalField(blank=True, decimal_places=3, default=None, max_digits=7, null=True, verbose_name='protein')),
                ('manually_fat', models.DecimalField(blank=True, decimal_places=3, default=None, max_digits=7, null=True, verbose_name='fat')),
                ('manually_carbohydrate', models.DecimalField(blank=True, decimal_places=3, default=None, max_digits=7, null=True, verbose_name='carbohydrate')),
                ('weight', models.IntegerField(default=0, help_text='Weight after cooking, in grams', verbose_name='weight')),
                ('energy', models.DecimalField(decimal_places=3, default=0, max_digits=7, verbose_name='energy')),
                ('protein', models.DecimalField(decimal_places=3, default=0, max_digits=7, verbose_name='protein')),
                ('fat', models.DecimalField(decimal_places=3, default=0, max_digits=7, verbose_name='fat')),
                ('carbohydrate', models.DecimalField(decimal_places=3, default=0, max_digits=7, verbose_name='carbohydrate')),
                ('label', models.CharField(choices=[('P', 'primary'), ('S', 'secondary'), ('D', 'danger')], max_length=1)),
                ('slug', models.SlugField()),
                ('price', models.FloatField()),
                ('discount_price', models.FloatField(blank=True, null=True)),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Category', verbose_name='category')),
            ],
            options={
                'verbose_name': 'recipe',
                'verbose_name_plural': 'recipes',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='tag name')),
                ('counter', models.IntegerField(default=0, verbose_name='counter')),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Example: cup', max_length=250, verbose_name='unit name')),
                ('plural', models.CharField(blank=True, help_text='Example: cups (comma separated if language has more 2 plural forms)', max_length=250, verbose_name='plural form')),
            ],
            options={
                'verbose_name': 'unit',
                'verbose_name_plural': 'units',
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField(blank=True, default=0, null=True, verbose_name='weight in gram')),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=4, verbose_name='quantity on additional unit')),
                ('roughly', models.BooleanField(default=False, verbose_name='roughly')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Ingredient', verbose_name='ingredient')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Recipe', verbose_name='recipe')),
                ('unit', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Unit', verbose_name='additional unit')),
            ],
            options={
                'verbose_name': 'ingredient',
                'verbose_name_plural': 'ingredients',
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='tags', to='core.Tag', verbose_name='tags'),
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered', models.BooleanField(default=False)),
                ('quantity', models.IntegerField(default=1)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Recipe')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('ordered_date', models.DateTimeField()),
                ('ordered', models.BooleanField(default=False)),
                ('items', models.ManyToManyField(to='core.OrderItem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IngredientUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ratio', models.DecimalField(decimal_places=4, default=1, max_digits=10, verbose_name='ratio')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Ingredient', verbose_name='ingredient')),
                ('unit', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='core.Unit', verbose_name='unit')),
            ],
            options={
                'verbose_name': 'additional unit',
                'verbose_name_plural': 'additional units',
            },
        ),
        migrations.CreateModel(
            name='IngredientNutritionalValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=3, default=1, max_digits=10, verbose_name='value')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Ingredient', verbose_name='ingredient')),
                ('nutrient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Nutrient', verbose_name='nutrient')),
                ('unit', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='core.Unit', verbose_name='unit')),
            ],
            options={
                'verbose_name': 'nutrient',
                'verbose_name_plural': 'nutrients',
            },
        ),
    ]
